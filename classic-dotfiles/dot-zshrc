#!/usr/bin/env bash

# Include helper fcn
include () {
    [[ -f "$1" ]] && source "$1"
}

# Local config
include "$HOME/.config/local-configs/local.zsh"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


# from: https://unix.stackexchange.com/questions/389881/history-isnt-preserved-in-zsh
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=1000000
setopt SHARE_HISTORY # or INC_APPEND_HISTORY_TIME

# Enter vim mode with <esc>
set -o vi

# Source some zsh plugins
source "$HOME/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh"
source "$HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
source $(brew --prefix)/share/zsh-abbr/zsh-abbr.zsh
eval "$(zoxide init zsh)"
zstyle ':completion:*' menu select
include "$HOME/.fzf.zsh"

# Paths
export PATH=$HOME/go/bin:$PATH
# Prefer gnu versions over free-bsd versions on mac (e.g. sed)
PATH="$(brew --prefix)/opt/gnu-sed/libexec/gnubin:$PATH"

# Add go path from user directory
PATH="$HOME/go/bin:$PATH"

# Case insensitive completions
autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# aws completions and on-partial auto-prompt
complete -C "$(brew --prefix)/bin/aws_completer" aws
export AWS_CLI_AUTO_PROMPT=on-partial

# Aliases
include "$HOME/.aliases"

# Aws assume role script
function aar() {
  OUT=$(aws sts assume-role --role-arn $1 --role-session-name $2);\
  export AWS_ACCESS_KEY_ID=$(echo $OUT | jq -r '.Credentials''.AccessKeyId');\
  export AWS_SECRET_ACCESS_KEY=$(echo $OUT | jq -r '.Credentials''.SecretAccessKey');\
  export AWS_SESSION_TOKEN=$(echo $OUT | jq -r '.Credentials''.SessionToken');
}

# Aws unset env vars (If I'm doing role shenanigans)
 function auenv() {
	unset AWS_DEFAULT_PROFILE
    unset AWS_DEFAULT_REGION
    unset AWS_PROFILE
    unset AWS_REGION
    unset AWS_ACCESS_KEY_ID
    unset AWS_SECRET_ACCESS_KEY
    unset AWS_SESSION_TOKEN
}

# fzf and python venv activation (https://seb.jambor.dev/posts/improving-shell-workflows-with-fzf/)
function activate-venv() {
  local selected_env
  selected_env=$(ls ~/.venv/ | fzf)

  if [ -n "$selected_env" ]; then
    source "$HOME/.venv/$selected_env/bin/activate"
  fi
}

# fzf and git branch deletion (https://seb.jambor.dev/posts/improving-shell-workflows-with-fzf/)
function delete-branches() {
  git branch |
    grep --invert-match '\*' |
    cut -c 3- |
    fzf --multi --preview="git log {} --" |
    xargs --no-run-if-empty git branch --delete --force
}

# checkout gh pr (https://seb.jambor.dev/posts/improving-shell-workflows-with-fzf/)
function pr-checkout() {
  local jq_template pr_number

  jq_template='"'\
'#\(.number) - \(.title)'\
'\t'\
'Author: \(.user.login)\n'\
'Created: \(.created_at)\n'\
'Updated: \(.updated_at)\n\n'\
'\(.body)'\
'"'

  pr_number=$(
    gh api 'repos/:owner/:repo/pulls' |
    jq ".[] | $jq_template" |
    sed -e 's/"\(.*\)"/\1/' -e 's/\\t/\t/' |
    fzf \
      --with-nth=1 \
      --delimiter='\t' \
      --preview='echo -e {2}' \
      --preview-window=top:wrap |
    sed 's/^#\([0-9]\+\).*/\1/'
  )

  if [ -n "$pr_number" ]; then
    gh pr checkout "$pr_number"
  fi
}

# peek pr status and comment `/retest`
function pr-peek() {
  gh pr status

  local pr_number

  pr_number=$(
    gh api 'repos/:owner/:repo/pulls' |
    jq ".[].number" |
    fzf \
      --height=40% \
      --layout=reverse \
  )

  if [ -n "$pr_number" ]; then
    gh pr comment "$pr_number" -b "/retest"
  fi
}

cdd() {
  ssh cdd
}

cddd() {
  local_dir="$(pwd)"
  c_dir="${local_dir#/Users/andsirey/workplace/}"
  ssh -t cdd "cd /home/andsirey/workplace/$c_dir ; exec \$SHELL -l"
}

# Cd .. functions!
..() {
  cd ..
}

...() {
  cd ../..
}

....() {
  cd ../../..
}

# Create a new directory and enter it
mkd() {
	mkdir -p "$@"
	cd "$@" || exit
}

# Make a temporary directory and enter it
tmpd() {
	local dir
	if [ $# -eq 0 ]; then
		dir=$(mktemp -d)
	else
		dir=$(mktemp -d -t "${1}.XXXXXXXXXX")
	fi
	cd "$dir" || exit
}

grepsed() {
  local dir="$1"
  local search="$2"
  local replacement="$3"

  grep -lR "$search" "$dir" | grep -v '^\.\/\.'| xargs sed -i "s/$search/$replacement/g"
}

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
source ~/powerlevel10k/powerlevel10k.zsh-theme

autoload -U +X bashcompinit && bashcompinit
export PATH="/Users/andsirey/.local/bin:$PATH"
